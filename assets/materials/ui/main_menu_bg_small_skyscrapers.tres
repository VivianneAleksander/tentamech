[gd_resource type="ShaderMaterial" load_steps=4 format=3 uid="uid://cqjbl7b2cgv5t"]

[sub_resource type="Shader" id="Shader_r8ft0"]
code = "shader_type spatial;
render_mode unshaded, cull_back;

uniform sampler2D building_color : source_color;
uniform float emission_strength = 1.0;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	vec3 normal = (INV_VIEW_MATRIX * vec4(NORMAL, 0.0)).rgb;
	vec4 color = texture(building_color, vec2(normal.x, 0.0));
	ALBEDO = (COLOR.rgb * color.rgb) * emission_strength;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="Gradient" id="Gradient_xj8fa"]
interpolation_mode = 1
offsets = PackedFloat32Array(0, 0.463235, 0.67402, 0.808824)
colors = PackedColorArray(0.773589, 0.109891, 0.772891, 1, 0.338806, 0.799794, 1, 1, 0.596209, 0.463474, 1, 1, 0.940109, 0.306314, 0.552812, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_ofaqr"]
gradient = SubResource("Gradient_xj8fa")

[resource]
render_priority = 0
shader = SubResource("Shader_r8ft0")
shader_parameter/emission_strength = 2.395
shader_parameter/building_color = SubResource("GradientTexture1D_ofaqr")
